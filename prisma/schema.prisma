generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id       String   @id @default(cuid())
  email    String   @unique
  password String
  reviews  Review[]
}

model Author {
  id     String  @id @default(cuid())
  slug   String  @unique
  name   String  @unique
  url    String
  blurb  String
  models Model[]
}

model Model {
  id            String     @id @default(cuid())
  slug          String
  datePublished DateTime
  name          String
  description   String
  numParameters String
  trainedFor    TrainedFor
  arch          Arch
  authorId      String
  canonicalUrl  String
  downloadUrl   String
  files         File[]
  author        Author     @relation(fields: [authorId], references: [id])
  reviews       Review[]

  @@unique([authorId, slug])
}

model File {
  id                 String @id @default(cuid())
  name               String @unique
  url                String
  sizeBytes          BigInt
  quantization       String
  format             String
  publisherName      String
  publisherSocialUrl String
  sha256checksum     String
  repository         String
  repositoryUrl      String
  modelId            String
  model              Model  @relation(fields: [modelId], references: [id])
}

model Review {
  id          String  @id @default(cuid())
  stars       Int
  text        String
  externalUrl String?
  userId      String
  modelId     String
  model       Model   @relation(fields: [modelId], references: [id])
  user        User    @relation(fields: [userId], references: [id])
}

enum Arch {
  llama
  starcoder
  mpt
}

enum TrainedFor {
  chat
  instruct
  other
}
