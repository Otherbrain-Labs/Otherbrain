// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl         = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
}

enum Arch {
  llama
  starcoder
  mpt
}

enum TrainedFor {
  chat
  instruct
  other
}

model User {
  id       String   @id @default(cuid())
  email    String   @unique
  password String
  reviews  Review[]
}

model Author {
  id    String @id @default(cuid())
  slug  String @unique
  name  String @unique
  url   String
  blurb String

  models Model[]
}

model Model {
  id            String     @id @default(cuid())
  slug          String
  datePublished DateTime
  name          String
  description   String
  numParameters String
  trainedFor    TrainedFor
  arch          Arch
  authorId      String
  canonicalUrl  String
  downloadUrl   String

  reviews Review[]
  files   File[]
  author  Author   @relation(fields: [authorId], references: [id])

  @@unique([authorId, slug])
}

model File {
  id                 String @id @default(cuid())
  name               String @unique
  url                String
  sizeBytes          BigInt
  quantization       String
  format             String
  publisherName      String
  publisherSocialUrl String
  sha256checksum     String
  repository         String
  repositoryUrl      String
  modelId            String
  model              Model  @relation(fields: [modelId], references: [id])
}

model Review {
  id      String @id @default(cuid())
  stars   Int
  text    String
  userId  String
  modelId String

  user  User  @relation(fields: [userId], references: [id])
  model Model @relation(fields: [modelId], references: [id])
}
